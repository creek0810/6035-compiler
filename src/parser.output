State 0 conflicts: 1 reduce/reduce
State 125 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | statement_list

    3 statement_list: /* empty */
    4               | statement_list statement

    5 statement: expression_statement
    6          | compound_statement
    7          | selection_statement
    8          | iteration_statement
    9          | jump_statement

   10 expression_statement: SEMI
   11                     | expression SEMI

   12 compound_statement: L_CURLY statement_list R_CURLY

   13 selection_statement: IF L_PARA expression R_PARA statement
   14                    | IF L_PARA expression R_PARA statement ELSE statement

   15 jump_statement: CONTINUE SEMI
   16               | BREAK SEMI

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression SEMI opt_expression R_PARA statement

   18 opt_expression: /* empty */
   19               | expression

   20 expression: logical_or_expression
   21           | postfix_expression ASSIGN expression

   22 logical_or_expression: logical_and_expression
   23                      | logical_or_expression LOGIC_OR logical_and_expression

   24 logical_and_expression: inclusive_or_expression
   25                       | logical_and_expression LOGIC_AND inclusive_or_expression

   26 inclusive_or_expression: exclusive_or_expression
   27                        | inclusive_or_expression OR exclusive_or_expression

   28 exclusive_or_expression: and_expression
   29                        | exclusive_or_expression XOR and_expression

   30 and_expression: equality_expression
   31               | and_expression AND equality_expression

   32 equality_expression: relational_expression
   33                    | equality_expression EQ relational_expression
   34                    | equality_expression NE relational_expression

   35 relational_expression: shift_expression
   36                      | relational_expression LT shift_expression
   37                      | relational_expression GT shift_expression
   38                      | relational_expression LE shift_expression
   39                      | relational_expression GE shift_expression

   40 shift_expression: additive_expression
   41                 | shift_expression SHL additive_expression
   42                 | shift_expression SHR additive_expression

   43 additive_expression: multiplicative_expression
   44                    | additive_expression ADD multiplicative_expression
   45                    | additive_expression SUB multiplicative_expression

   46 multiplicative_expression: unary_expression
   47                          | multiplicative_expression MUL unary_expression
   48                          | multiplicative_expression DIV unary_expression
   49                          | multiplicative_expression MOD unary_expression

   50 unary_expression: postfix_expression
   51                 | ADD unary_expression
   52                 | SUB unary_expression
   53                 | TILDE unary_expression
   54                 | EXCLAM unary_expression

   55 postfix_expression: primary_expression
   56                   | postfix_expression L_BRACKET expression R_BRACKET
   57                   | PRINT L_PARA expression R_PARA
   58                   | LEN L_PARA expression R_PARA
   59                   | INPUT L_PARA R_PARA
   60                   | INT L_PARA expression R_PARA
   61                   | APPEND L_PARA IDENT COMMA expression R_PARA

   62 primary_expression: IDENT
   63                   | NUMBER
   64                   | L_PARA expression R_PARA
   65                   | STR
   66                   | L_BRACKET array R_BRACKET

   67 array: /* empty */
   68      | STR
   69      | NUMBER
   70      | array COMMA STR
   71      | array COMMA NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 13 14
ELSE (259) 14
FOR (260) 17
CONTINUE (261) 15
BREAK (262) 16
PRINT (263) 57
APPEND (264) 61
LEN (265) 58
INPUT (266) 59
INT (267) 60
SHL (268) 41
SHR (269) 42
LE (270) 38
GE (271) 39
EQ (272) 33
NE (273) 34
LOGIC_AND (274) 25
LOGIC_OR (275) 23
SEMI (276) 10 11 15 16 17
L_CURLY (277) 12
R_CURLY (278) 12
L_PARA (279) 13 14 17 57 58 59 60 61 64
R_PARA (280) 13 14 17 57 58 59 60 61 64
L_BRACKET (281) 56 66
R_BRACKET (282) 56 66
OR (283) 27
AND (284) 31
XOR (285) 29
ADD (286) 44 51
SUB (287) 45 52
MUL (288) 47
DIV (289) 48
MOD (290) 49
LT (291) 36
GT (292) 37
TILDE (293) 53
EXCLAM (294) 54
COMMA (295) 61 70 71
ASSIGN (296) 21
NUMBER (297) 63 69 71
STR (298) 65 68 70
IDENT (299) 61 62


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1 2, on right: 0
statement_list (47)
    on left: 3 4, on right: 2 4 12
statement (48)
    on left: 5 6 7 8 9, on right: 4 13 14 17
expression_statement (49)
    on left: 10 11, on right: 5
compound_statement (50)
    on left: 12, on right: 6
selection_statement (51)
    on left: 13 14, on right: 7
jump_statement (52)
    on left: 15 16, on right: 9
iteration_statement (53)
    on left: 17, on right: 8
opt_expression (54)
    on left: 18 19, on right: 17
expression (55)
    on left: 20 21, on right: 11 13 14 19 21 56 57 58 60 61 64
logical_or_expression (56)
    on left: 22 23, on right: 20 23
logical_and_expression (57)
    on left: 24 25, on right: 22 23 25
inclusive_or_expression (58)
    on left: 26 27, on right: 24 25 27
exclusive_or_expression (59)
    on left: 28 29, on right: 26 27 29
and_expression (60)
    on left: 30 31, on right: 28 29 31
equality_expression (61)
    on left: 32 33 34, on right: 30 31 33 34
relational_expression (62)
    on left: 35 36 37 38 39, on right: 32 33 34 36 37 38 39
shift_expression (63)
    on left: 40 41 42, on right: 35 36 37 38 39 41 42
additive_expression (64)
    on left: 43 44 45, on right: 40 41 42 44 45
multiplicative_expression (65)
    on left: 46 47 48 49, on right: 43 44 45 47 48 49
unary_expression (66)
    on left: 50 51 52 53 54, on right: 46 47 48 49 51 52 53 54
postfix_expression (67)
    on left: 55 56 57 58 59 60 61, on right: 21 50 56
primary_expression (68)
    on left: 62 63 64 65 66, on right: 55
array (69)
    on left: 67 68 69 70 71, on right: 66 70 71


state 0

    0 $accept: . program $end

    $end      reduce using rule 1 (program)
    $end      [reduce using rule 3 (statement_list)]
    $default  reduce using rule 3 (statement_list)

    program         go to state 1
    statement_list  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: statement_list .
    4 statement_list: statement_list . statement

    IF         shift, and go to state 4
    FOR        shift, and go to state 5
    CONTINUE   shift, and go to state 6
    BREAK      shift, and go to state 7
    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    SEMI       shift, and go to state 13
    L_CURLY    shift, and go to state 14
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    $default  reduce using rule 2 (program)

    statement                  go to state 24
    expression_statement       go to state 25
    compound_statement         go to state 26
    selection_statement        go to state 27
    jump_statement             go to state 28
    iteration_statement        go to state 29
    expression                 go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 3

    0 $accept: program $end .

    $default  accept


state 4

   13 selection_statement: IF . L_PARA expression R_PARA statement
   14                    | IF . L_PARA expression R_PARA statement ELSE statement

    L_PARA  shift, and go to state 44


state 5

   17 iteration_statement: FOR . L_PARA opt_expression SEMI opt_expression SEMI opt_expression R_PARA statement

    L_PARA  shift, and go to state 45


state 6

   15 jump_statement: CONTINUE . SEMI

    SEMI  shift, and go to state 46


state 7

   16 jump_statement: BREAK . SEMI

    SEMI  shift, and go to state 47


state 8

   57 postfix_expression: PRINT . L_PARA expression R_PARA

    L_PARA  shift, and go to state 48


state 9

   61 postfix_expression: APPEND . L_PARA IDENT COMMA expression R_PARA

    L_PARA  shift, and go to state 49


state 10

   58 postfix_expression: LEN . L_PARA expression R_PARA

    L_PARA  shift, and go to state 50


state 11

   59 postfix_expression: INPUT . L_PARA R_PARA

    L_PARA  shift, and go to state 51


state 12

   60 postfix_expression: INT . L_PARA expression R_PARA

    L_PARA  shift, and go to state 52


state 13

   10 expression_statement: SEMI .

    $default  reduce using rule 10 (expression_statement)


state 14

   12 compound_statement: L_CURLY . statement_list R_CURLY

    $default  reduce using rule 3 (statement_list)

    statement_list  go to state 53


state 15

   64 primary_expression: L_PARA . expression R_PARA

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 54
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 16

   66 primary_expression: L_BRACKET . array R_BRACKET

    NUMBER  shift, and go to state 55
    STR     shift, and go to state 56

    $default  reduce using rule 67 (array)

    array  go to state 57


state 17

   51 unary_expression: ADD . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 58
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 18

   52 unary_expression: SUB . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 60
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 19

   53 unary_expression: TILDE . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 61
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 20

   54 unary_expression: EXCLAM . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 62
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 21

   63 primary_expression: NUMBER .

    $default  reduce using rule 63 (primary_expression)


state 22

   65 primary_expression: STR .

    $default  reduce using rule 65 (primary_expression)


state 23

   62 primary_expression: IDENT .

    $default  reduce using rule 62 (primary_expression)


state 24

    4 statement_list: statement_list statement .

    $default  reduce using rule 4 (statement_list)


state 25

    5 statement: expression_statement .

    $default  reduce using rule 5 (statement)


state 26

    6 statement: compound_statement .

    $default  reduce using rule 6 (statement)


state 27

    7 statement: selection_statement .

    $default  reduce using rule 7 (statement)


state 28

    9 statement: jump_statement .

    $default  reduce using rule 9 (statement)


state 29

    8 statement: iteration_statement .

    $default  reduce using rule 8 (statement)


state 30

   11 expression_statement: expression . SEMI

    SEMI  shift, and go to state 63


state 31

   20 expression: logical_or_expression .
   23 logical_or_expression: logical_or_expression . LOGIC_OR logical_and_expression

    LOGIC_OR  shift, and go to state 64

    $default  reduce using rule 20 (expression)


state 32

   22 logical_or_expression: logical_and_expression .
   25 logical_and_expression: logical_and_expression . LOGIC_AND inclusive_or_expression

    LOGIC_AND  shift, and go to state 65

    $default  reduce using rule 22 (logical_or_expression)


state 33

   24 logical_and_expression: inclusive_or_expression .
   27 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression

    OR  shift, and go to state 66

    $default  reduce using rule 24 (logical_and_expression)


state 34

   26 inclusive_or_expression: exclusive_or_expression .
   29 exclusive_or_expression: exclusive_or_expression . XOR and_expression

    XOR  shift, and go to state 67

    $default  reduce using rule 26 (inclusive_or_expression)


state 35

   28 exclusive_or_expression: and_expression .
   31 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 68

    $default  reduce using rule 28 (exclusive_or_expression)


state 36

   30 and_expression: equality_expression .
   33 equality_expression: equality_expression . EQ relational_expression
   34                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 69
    NE  shift, and go to state 70

    $default  reduce using rule 30 (and_expression)


state 37

   32 equality_expression: relational_expression .
   36 relational_expression: relational_expression . LT shift_expression
   37                      | relational_expression . GT shift_expression
   38                      | relational_expression . LE shift_expression
   39                      | relational_expression . GE shift_expression

    LE  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    GT  shift, and go to state 74

    $default  reduce using rule 32 (equality_expression)


state 38

   35 relational_expression: shift_expression .
   41 shift_expression: shift_expression . SHL additive_expression
   42                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 75
    SHR  shift, and go to state 76

    $default  reduce using rule 35 (relational_expression)


state 39

   40 shift_expression: additive_expression .
   44 additive_expression: additive_expression . ADD multiplicative_expression
   45                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 40 (shift_expression)


state 40

   43 additive_expression: multiplicative_expression .
   47 multiplicative_expression: multiplicative_expression . MUL unary_expression
   48                          | multiplicative_expression . DIV unary_expression
   49                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 43 (additive_expression)


state 41

   46 multiplicative_expression: unary_expression .

    $default  reduce using rule 46 (multiplicative_expression)


state 42

   21 expression: postfix_expression . ASSIGN expression
   50 unary_expression: postfix_expression .
   56 postfix_expression: postfix_expression . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 82
    ASSIGN     shift, and go to state 83

    $default  reduce using rule 50 (unary_expression)


state 43

   55 postfix_expression: primary_expression .

    $default  reduce using rule 55 (postfix_expression)


state 44

   13 selection_statement: IF L_PARA . expression R_PARA statement
   14                    | IF L_PARA . expression R_PARA statement ELSE statement

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 84
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 45

   17 iteration_statement: FOR L_PARA . opt_expression SEMI opt_expression SEMI opt_expression R_PARA statement

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    $default  reduce using rule 18 (opt_expression)

    opt_expression             go to state 85
    expression                 go to state 86
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 46

   15 jump_statement: CONTINUE SEMI .

    $default  reduce using rule 15 (jump_statement)


state 47

   16 jump_statement: BREAK SEMI .

    $default  reduce using rule 16 (jump_statement)


state 48

   57 postfix_expression: PRINT L_PARA . expression R_PARA

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 87
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 49

   61 postfix_expression: APPEND L_PARA . IDENT COMMA expression R_PARA

    IDENT  shift, and go to state 88


state 50

   58 postfix_expression: LEN L_PARA . expression R_PARA

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 89
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 51

   59 postfix_expression: INPUT L_PARA . R_PARA

    R_PARA  shift, and go to state 90


state 52

   60 postfix_expression: INT L_PARA . expression R_PARA

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 91
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 53

    4 statement_list: statement_list . statement
   12 compound_statement: L_CURLY statement_list . R_CURLY

    IF         shift, and go to state 4
    FOR        shift, and go to state 5
    CONTINUE   shift, and go to state 6
    BREAK      shift, and go to state 7
    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    SEMI       shift, and go to state 13
    L_CURLY    shift, and go to state 14
    R_CURLY    shift, and go to state 92
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    statement                  go to state 24
    expression_statement       go to state 25
    compound_statement         go to state 26
    selection_statement        go to state 27
    jump_statement             go to state 28
    iteration_statement        go to state 29
    expression                 go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 54

   64 primary_expression: L_PARA expression . R_PARA

    R_PARA  shift, and go to state 93


state 55

   69 array: NUMBER .

    $default  reduce using rule 69 (array)


state 56

   68 array: STR .

    $default  reduce using rule 68 (array)


state 57

   66 primary_expression: L_BRACKET array . R_BRACKET
   70 array: array . COMMA STR
   71      | array . COMMA NUMBER

    R_BRACKET  shift, and go to state 94
    COMMA      shift, and go to state 95


state 58

   51 unary_expression: ADD unary_expression .

    $default  reduce using rule 51 (unary_expression)


state 59

   50 unary_expression: postfix_expression .
   56 postfix_expression: postfix_expression . L_BRACKET expression R_BRACKET

    L_BRACKET  shift, and go to state 82

    $default  reduce using rule 50 (unary_expression)


state 60

   52 unary_expression: SUB unary_expression .

    $default  reduce using rule 52 (unary_expression)


state 61

   53 unary_expression: TILDE unary_expression .

    $default  reduce using rule 53 (unary_expression)


state 62

   54 unary_expression: EXCLAM unary_expression .

    $default  reduce using rule 54 (unary_expression)


state 63

   11 expression_statement: expression SEMI .

    $default  reduce using rule 11 (expression_statement)


state 64

   23 logical_or_expression: logical_or_expression LOGIC_OR . logical_and_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    logical_and_expression     go to state 96
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 65

   25 logical_and_expression: logical_and_expression LOGIC_AND . inclusive_or_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    inclusive_or_expression    go to state 97
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 66

   27 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    exclusive_or_expression    go to state 98
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 67

   29 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    and_expression             go to state 99
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 68

   31 and_expression: and_expression AND . equality_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    equality_expression        go to state 100
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 69

   33 equality_expression: equality_expression EQ . relational_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    relational_expression      go to state 101
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 70

   34 equality_expression: equality_expression NE . relational_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    relational_expression      go to state 102
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 71

   38 relational_expression: relational_expression LE . shift_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    shift_expression           go to state 103
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 72

   39 relational_expression: relational_expression GE . shift_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    shift_expression           go to state 104
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 73

   36 relational_expression: relational_expression LT . shift_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    shift_expression           go to state 105
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 74

   37 relational_expression: relational_expression GT . shift_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    shift_expression           go to state 106
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 75

   41 shift_expression: shift_expression SHL . additive_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    additive_expression        go to state 107
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 76

   42 shift_expression: shift_expression SHR . additive_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    additive_expression        go to state 108
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 77

   44 additive_expression: additive_expression ADD . multiplicative_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    multiplicative_expression  go to state 109
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 78

   45 additive_expression: additive_expression SUB . multiplicative_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    multiplicative_expression  go to state 110
    unary_expression           go to state 41
    postfix_expression         go to state 59
    primary_expression         go to state 43


state 79

   47 multiplicative_expression: multiplicative_expression MUL . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 111
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 80

   48 multiplicative_expression: multiplicative_expression DIV . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 112
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 81

   49 multiplicative_expression: multiplicative_expression MOD . unary_expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    unary_expression    go to state 113
    postfix_expression  go to state 59
    primary_expression  go to state 43


state 82

   56 postfix_expression: postfix_expression L_BRACKET . expression R_BRACKET

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 114
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 83

   21 expression: postfix_expression ASSIGN . expression

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 115
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 84

   13 selection_statement: IF L_PARA expression . R_PARA statement
   14                    | IF L_PARA expression . R_PARA statement ELSE statement

    R_PARA  shift, and go to state 116


state 85

   17 iteration_statement: FOR L_PARA opt_expression . SEMI opt_expression SEMI opt_expression R_PARA statement

    SEMI  shift, and go to state 117


state 86

   19 opt_expression: expression .

    $default  reduce using rule 19 (opt_expression)


state 87

   57 postfix_expression: PRINT L_PARA expression . R_PARA

    R_PARA  shift, and go to state 118


state 88

   61 postfix_expression: APPEND L_PARA IDENT . COMMA expression R_PARA

    COMMA  shift, and go to state 119


state 89

   58 postfix_expression: LEN L_PARA expression . R_PARA

    R_PARA  shift, and go to state 120


state 90

   59 postfix_expression: INPUT L_PARA R_PARA .

    $default  reduce using rule 59 (postfix_expression)


state 91

   60 postfix_expression: INT L_PARA expression . R_PARA

    R_PARA  shift, and go to state 121


state 92

   12 compound_statement: L_CURLY statement_list R_CURLY .

    $default  reduce using rule 12 (compound_statement)


state 93

   64 primary_expression: L_PARA expression R_PARA .

    $default  reduce using rule 64 (primary_expression)


state 94

   66 primary_expression: L_BRACKET array R_BRACKET .

    $default  reduce using rule 66 (primary_expression)


state 95

   70 array: array COMMA . STR
   71      | array COMMA . NUMBER

    NUMBER  shift, and go to state 122
    STR     shift, and go to state 123


state 96

   23 logical_or_expression: logical_or_expression LOGIC_OR logical_and_expression .
   25 logical_and_expression: logical_and_expression . LOGIC_AND inclusive_or_expression

    LOGIC_AND  shift, and go to state 65

    $default  reduce using rule 23 (logical_or_expression)


state 97

   25 logical_and_expression: logical_and_expression LOGIC_AND inclusive_or_expression .
   27 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression

    OR  shift, and go to state 66

    $default  reduce using rule 25 (logical_and_expression)


state 98

   27 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .
   29 exclusive_or_expression: exclusive_or_expression . XOR and_expression

    XOR  shift, and go to state 67

    $default  reduce using rule 27 (inclusive_or_expression)


state 99

   29 exclusive_or_expression: exclusive_or_expression XOR and_expression .
   31 and_expression: and_expression . AND equality_expression

    AND  shift, and go to state 68

    $default  reduce using rule 29 (exclusive_or_expression)


state 100

   31 and_expression: and_expression AND equality_expression .
   33 equality_expression: equality_expression . EQ relational_expression
   34                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 69
    NE  shift, and go to state 70

    $default  reduce using rule 31 (and_expression)


state 101

   33 equality_expression: equality_expression EQ relational_expression .
   36 relational_expression: relational_expression . LT shift_expression
   37                      | relational_expression . GT shift_expression
   38                      | relational_expression . LE shift_expression
   39                      | relational_expression . GE shift_expression

    LE  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    GT  shift, and go to state 74

    $default  reduce using rule 33 (equality_expression)


state 102

   34 equality_expression: equality_expression NE relational_expression .
   36 relational_expression: relational_expression . LT shift_expression
   37                      | relational_expression . GT shift_expression
   38                      | relational_expression . LE shift_expression
   39                      | relational_expression . GE shift_expression

    LE  shift, and go to state 71
    GE  shift, and go to state 72
    LT  shift, and go to state 73
    GT  shift, and go to state 74

    $default  reduce using rule 34 (equality_expression)


state 103

   38 relational_expression: relational_expression LE shift_expression .
   41 shift_expression: shift_expression . SHL additive_expression
   42                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 75
    SHR  shift, and go to state 76

    $default  reduce using rule 38 (relational_expression)


state 104

   39 relational_expression: relational_expression GE shift_expression .
   41 shift_expression: shift_expression . SHL additive_expression
   42                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 75
    SHR  shift, and go to state 76

    $default  reduce using rule 39 (relational_expression)


state 105

   36 relational_expression: relational_expression LT shift_expression .
   41 shift_expression: shift_expression . SHL additive_expression
   42                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 75
    SHR  shift, and go to state 76

    $default  reduce using rule 36 (relational_expression)


state 106

   37 relational_expression: relational_expression GT shift_expression .
   41 shift_expression: shift_expression . SHL additive_expression
   42                 | shift_expression . SHR additive_expression

    SHL  shift, and go to state 75
    SHR  shift, and go to state 76

    $default  reduce using rule 37 (relational_expression)


state 107

   41 shift_expression: shift_expression SHL additive_expression .
   44 additive_expression: additive_expression . ADD multiplicative_expression
   45                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 41 (shift_expression)


state 108

   42 shift_expression: shift_expression SHR additive_expression .
   44 additive_expression: additive_expression . ADD multiplicative_expression
   45                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 42 (shift_expression)


state 109

   44 additive_expression: additive_expression ADD multiplicative_expression .
   47 multiplicative_expression: multiplicative_expression . MUL unary_expression
   48                          | multiplicative_expression . DIV unary_expression
   49                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 44 (additive_expression)


state 110

   45 additive_expression: additive_expression SUB multiplicative_expression .
   47 multiplicative_expression: multiplicative_expression . MUL unary_expression
   48                          | multiplicative_expression . DIV unary_expression
   49                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 45 (additive_expression)


state 111

   47 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 47 (multiplicative_expression)


state 112

   48 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 48 (multiplicative_expression)


state 113

   49 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 49 (multiplicative_expression)


state 114

   56 postfix_expression: postfix_expression L_BRACKET expression . R_BRACKET

    R_BRACKET  shift, and go to state 124


state 115

   21 expression: postfix_expression ASSIGN expression .

    $default  reduce using rule 21 (expression)


state 116

   13 selection_statement: IF L_PARA expression R_PARA . statement
   14                    | IF L_PARA expression R_PARA . statement ELSE statement

    IF         shift, and go to state 4
    FOR        shift, and go to state 5
    CONTINUE   shift, and go to state 6
    BREAK      shift, and go to state 7
    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    SEMI       shift, and go to state 13
    L_CURLY    shift, and go to state 14
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    statement                  go to state 125
    expression_statement       go to state 25
    compound_statement         go to state 26
    selection_statement        go to state 27
    jump_statement             go to state 28
    iteration_statement        go to state 29
    expression                 go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 117

   17 iteration_statement: FOR L_PARA opt_expression SEMI . opt_expression SEMI opt_expression R_PARA statement

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    $default  reduce using rule 18 (opt_expression)

    opt_expression             go to state 126
    expression                 go to state 86
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 118

   57 postfix_expression: PRINT L_PARA expression R_PARA .

    $default  reduce using rule 57 (postfix_expression)


state 119

   61 postfix_expression: APPEND L_PARA IDENT COMMA . expression R_PARA

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    expression                 go to state 127
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 120

   58 postfix_expression: LEN L_PARA expression R_PARA .

    $default  reduce using rule 58 (postfix_expression)


state 121

   60 postfix_expression: INT L_PARA expression R_PARA .

    $default  reduce using rule 60 (postfix_expression)


state 122

   71 array: array COMMA NUMBER .

    $default  reduce using rule 71 (array)


state 123

   70 array: array COMMA STR .

    $default  reduce using rule 70 (array)


state 124

   56 postfix_expression: postfix_expression L_BRACKET expression R_BRACKET .

    $default  reduce using rule 56 (postfix_expression)


state 125

   13 selection_statement: IF L_PARA expression R_PARA statement .
   14                    | IF L_PARA expression R_PARA statement . ELSE statement

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 13 (selection_statement)]
    $default  reduce using rule 13 (selection_statement)


state 126

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression . SEMI opt_expression R_PARA statement

    SEMI  shift, and go to state 129


state 127

   61 postfix_expression: APPEND L_PARA IDENT COMMA expression . R_PARA

    R_PARA  shift, and go to state 130


state 128

   14 selection_statement: IF L_PARA expression R_PARA statement ELSE . statement

    IF         shift, and go to state 4
    FOR        shift, and go to state 5
    CONTINUE   shift, and go to state 6
    BREAK      shift, and go to state 7
    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    SEMI       shift, and go to state 13
    L_CURLY    shift, and go to state 14
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    statement                  go to state 131
    expression_statement       go to state 25
    compound_statement         go to state 26
    selection_statement        go to state 27
    jump_statement             go to state 28
    iteration_statement        go to state 29
    expression                 go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 129

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression SEMI . opt_expression R_PARA statement

    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    $default  reduce using rule 18 (opt_expression)

    opt_expression             go to state 132
    expression                 go to state 86
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 130

   61 postfix_expression: APPEND L_PARA IDENT COMMA expression R_PARA .

    $default  reduce using rule 61 (postfix_expression)


state 131

   14 selection_statement: IF L_PARA expression R_PARA statement ELSE statement .

    $default  reduce using rule 14 (selection_statement)


state 132

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression SEMI opt_expression . R_PARA statement

    R_PARA  shift, and go to state 133


state 133

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression SEMI opt_expression R_PARA . statement

    IF         shift, and go to state 4
    FOR        shift, and go to state 5
    CONTINUE   shift, and go to state 6
    BREAK      shift, and go to state 7
    PRINT      shift, and go to state 8
    APPEND     shift, and go to state 9
    LEN        shift, and go to state 10
    INPUT      shift, and go to state 11
    INT        shift, and go to state 12
    SEMI       shift, and go to state 13
    L_CURLY    shift, and go to state 14
    L_PARA     shift, and go to state 15
    L_BRACKET  shift, and go to state 16
    ADD        shift, and go to state 17
    SUB        shift, and go to state 18
    TILDE      shift, and go to state 19
    EXCLAM     shift, and go to state 20
    NUMBER     shift, and go to state 21
    STR        shift, and go to state 22
    IDENT      shift, and go to state 23

    statement                  go to state 134
    expression_statement       go to state 25
    compound_statement         go to state 26
    selection_statement        go to state 27
    jump_statement             go to state 28
    iteration_statement        go to state 29
    expression                 go to state 30
    logical_or_expression      go to state 31
    logical_and_expression     go to state 32
    inclusive_or_expression    go to state 33
    exclusive_or_expression    go to state 34
    and_expression             go to state 35
    equality_expression        go to state 36
    relational_expression      go to state 37
    shift_expression           go to state 38
    additive_expression        go to state 39
    multiplicative_expression  go to state 40
    unary_expression           go to state 41
    postfix_expression         go to state 42
    primary_expression         go to state 43


state 134

   17 iteration_statement: FOR L_PARA opt_expression SEMI opt_expression SEMI opt_expression R_PARA statement .

    $default  reduce using rule 17 (iteration_statement)
